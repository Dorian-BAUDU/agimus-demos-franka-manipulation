<?xml version="1.0"?>
<launch>

  <!-- Gazebo & GUI Configuration -->
  <arg name="headless"    default="false" doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="rviz"        default="false" doc="Should RVIz be launched?" />

  <!-- Robot Customization -->
  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J panda1_joint1 0
                -J panda1_joint2 -0.785398163
                -J panda1_joint3 0
                -J panda1_joint4 -2.35619449
                -J panda1_joint5 0
                -J panda1_joint6 1.57079632679
                -J panda1_joint7 0.785398163397
                -J panda1_finger_joint1 0.001
                -J panda1_finger_joint2 0.001"
       />
  <!-- Calibration setup adds a chessboard on the support-->
  <arg name="calibration" default="false"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
    <!-- Always start in paused mode, and only unpause when spawning the model -->
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(eval not arg('headless'))"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description"
         command="xacro $(find agimus_demos)/franka/manipulation/urdf/demo.urdf.xacro
                  gazebo:=true
                  hand:=true
                  calibration:=$(arg calibration)">
  </param>

  <include file="$(find agimus_demos)/launch/franka_manipulation_rosparam.launch">
    <arg name="arm_id" value="panda1"/>
  </include>

  <param name="m_ee" value="0.76" />

  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <node name="panda1_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model panda1 $(arg unpause)
              $(arg initial_joint_positions)
              "/>

  <!-- Spawn required ROS controllers -->
  <node pkg="controller_manager"
        type="spawner"
        name="panda1_gripper_spawner"
        args="franka_gripper"
        respawn="false"
  />

  <!-- spawns the controller after the robot was put into its initial joint pose -->
  <node pkg="controller_manager"
        type="spawner"
        name="panda1_controller_spawner"
        respawn="false" output="screen"
        args="--wait-for initialized franka_state_controller"
  />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
    <rosparam param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node>

</launch>
